(self.webpackChunkrport_site=self.webpackChunkrport_site||[]).push([[610],{8014:(e,n,s)=>{"use strict";s.r(n),s.d(n,{data:()=>a});const a={key:"v-3d9da4af",path:"/docs/no02-api-auth.html",title:"API Authentication",lang:"en-DE",frontmatter:{},excerpt:"",headers:[{level:2,title:"Authentication Mechanisms",slug:"authentication-mechanisms",children:[{level:3,title:"HTTP Basic Auth",slug:"http-basic-auth",children:[]},{level:3,title:"Bearer Token Auth",slug:"bearer-token-auth",children:[]},{level:3,title:"Two-Factor Auth",slug:"two-factor-auth",children:[]}]},{level:2,title:"Storing credentials, managing users",slug:"storing-credentials-managing-users",children:[{level:3,title:"Hardcoded single user",slug:"hardcoded-single-user",children:[]},{level:3,title:"User File",slug:"user-file",children:[]},{level:3,title:"Database",slug:"database",children:[]}]}],filePathRelative:"docs/no02-api-auth.md"}},4270:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>$e});var a=s(6252);const t=(0,a.uE)('<h1 id="api-authentication" tabindex="-1"><a class="header-anchor" href="#api-authentication" aria-hidden="true">#</a> API Authentication</h1><h2 id="authentication-mechanisms" tabindex="-1"><a class="header-anchor" href="#authentication-mechanisms" aria-hidden="true">#</a> Authentication Mechanisms</h2><p>The Rportd API support two ways of authentication.</p><ol><li>HTTP Basic Auth</li><li>Bearer Token Auth</li><li>Two-Factor Auth</li></ol><h3 id="http-basic-auth" tabindex="-1"><a class="header-anchor" href="#http-basic-auth" aria-hidden="true">#</a> HTTP Basic Auth</h3><p>The API claims to be REST compliant. Submitting credentials on each request using an HTTP basic auth header is therefore possible, for example</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>curl -s -u admin:foobaz http://localhost:3000/api/v1/clients|jq\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>With the two-factor authentication enabled, HTTP basic authentication with a username and user&#39;s password stops working. But you can create a static API token per user to activate HTTP basic auth again. Users must submit the personal API token instead of the password, for example</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>curl -s -u admin:e83d40e4-e237-43d6-bb99-35972ded631b http://localhost:3000/api/v1/clients|jq\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="bearer-token-auth" tabindex="-1"><a class="header-anchor" href="#bearer-token-auth" aria-hidden="true">#</a> Bearer Token Auth</h3>',10),r=(0,a.Uk)("Using HTTP Basic auth you can request a token at "),l={href:"https://petstore.swagger.io/?url=https://raw.githubusercontent.com/cloudradar-monitoring/rport/master/api-doc.yml#/default/get_login",target:"_blank",rel:"noopener noreferrer"},o=(0,a.Wm)("code",null,"login",-1),i=(0,a.Uk)(" endpoint"),u=(0,a.Uk)(" to authenticate further requests with a token. Example:"),m=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>curl -s -u admin:foobaz http://localhost:3000/api/v1/login|jq\n{\n &quot;data&quot;: {\n  &quot;token&quot;: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIxMzI2MDU3MjgzMTA4OTc4NTg1OSJ9.6HSANk3aRleJbAMvfJhUc4grieupRdfU62MMX_L6wEA&quot;\n }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>The token has a default lifetime of 600 seconds(10 minutes). Using the query parameter <code>token-lifetime=3600</code>(in seconds) you can request a defined lifetime.</p><p>Having a valid token you can execute requests, using an <code>Authorization: Bearer: &lt;TOKEN&gt;</code> header. For example.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># Get and store the token\ncurl -s -u admin:foobaz http://localhost:3000/api/v1/login?token-lifetime=3600|jq -r .data.token &gt; .token\n\n# Request using the stored token\ncurl -s -H &quot;Authorization: Bearer $(cat .token)&quot; http://localhost:3000/api/v1/clients|jq\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Rportd holds the tokens in memory. Restarting rportd deletes (expires) them all.</p><p>Tokens are based on JWT. For your security, you should enter a unique <code>jwt_secret</code> into the <code>rportd.conf</code>. Do not use the provided sample secret in a production environment.</p><h3 id="two-factor-auth" tabindex="-1"><a class="header-anchor" href="#two-factor-auth" aria-hidden="true">#</a> Two-Factor Auth</h3><p>If you want an extra layer of security, you can enable 2FA. It allows you to confirm your login with a verification code sent by a chosen delivery method. Supported delivery methods:</p>',8),p=(0,a.Uk)("email (requires "),c=(0,a.Uk)("SMTP setup"),d=(0,a.Uk)(")"),b={href:"https://pushover.net",target:"_blank",rel:"noopener noreferrer"},W=(0,a.Uk)("pushover.net"),h=(0,a.Uk)(" (requires "),g=(0,a.Uk)("Pushover setup"),k=(0,a.Uk)(")"),f=(0,a.Uk)("Custom "),v=(0,a.Uk)("script"),U=(0,a.Wm)("p",null,"By default, 2FA is disabled.",-1),q=(0,a.Wm)("h4",{id:"how-to-enable-2fa",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#how-to-enable-2fa","aria-hidden":"true"},"#"),(0,a.Uk)(" How to enable 2FA?")],-1),x=(0,a.uE)('<li><p>Choose the desired delivery method. Enter the following lines to the <code>rportd.config</code> in the <code>[api]</code> section, for example:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>two_fa_token_delivery = &#39;smtp&#39;\ntwo_fa_token_ttl_seconds = 600\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Use either <code>&#39;smtp&#39;</code>, <code>&#39;pushover&#39;</code> or provide a path to a binary or script executable.</p><p><code>two_fa_token_ttl_seconds</code> is an optional param for a lifetime of 2FA verification code. By default, 600 seconds.</p></li>',1),w=(0,a.Uk)("Set up a valid "),T=(0,a.Uk)("SMTP"),E=(0,a.Uk)(" or "),y=(0,a.Uk)("Pushover"),_=(0,a.Uk)(" config."),A=(0,a.Uk)("2FA is not available if you use "),N=(0,a.Uk)("a single static user-password pair"),I=(0,a.Uk)("."),L=(0,a.Uk)("Your user-password store ("),C=(0,a.Uk)("json file"),R=(0,a.Uk)(" or "),S=(0,a.Uk)("DB table"),O=(0,a.Uk)(") needs an additional field "),F=(0,a.Wm)("code",null,"two_fa_send_to",-1),P=(0,a.Uk)(". It should hold an email or pushover user key that is used to send 2FA verification code to a user."),H=(0,a.uE)('<li><p>Your user&#39;s <code>two_fa_send_to</code> field needs to contain a valid email or pushover user key.</p><p>When using an executable for delivery, <code>two_fa_send_to_type</code> can be used to specify how the <code>two_fa_send_to</code> is validated on changes. This setting is ignored when using SMTP or Pushover for token delivery. Use <code>2fa_send_to_type = &#39;email&#39;</code> to accept only valid email address. Or use a regular expression, for example</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>2fa_send_to_type = &#39;regex&#39;\n2fa_send_to_regex = &#39;[a-z0-9]{10}&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>Restart the server.</p></li>',2),j=(0,a.Wm)("h4",{id:"how-to-use-it",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#how-to-use-it","aria-hidden":"true"},"#"),(0,a.Uk)(" How to use it?")],-1),B=(0,a.Uk)("Using 2FA will disable HTTP basic auth on all API endpoints except "),M={href:"https://petstore.swagger.io/?url=https://raw.githubusercontent.com/cloudradar-monitoring/rport/master/api-doc.yml#/Login/get_login",target:"_blank",rel:"noopener noreferrer"},X=(0,a.Wm)("code",null,"/login",-1),z=(0,a.Uk)(". Login endpoints trigger sending 2FA verification code to a user. For example,"),D=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>curl -s -u admin:foobaz http://localhost:3000/api/v1/login|jq\n{\n  &quot;data&quot;: {\n    &quot;token&quot;: null,\n    &quot;two_fa&quot;: {\n      &quot;send_to&quot;: &quot;my.email@gmail.com&quot;,\n      &quot;delivery_method&quot;: &quot;email&quot;\n    }\n  }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol start="2"><li>Wait for an email with <code>Rport 2FA</code> subject with a content like:</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Verification code: 05Nfqm (valid 10m0s)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),$={start:"3"},Q=(0,a.Uk)("Verify this code using "),Y={href:"https://petstore.swagger.io/?url=https://raw.githubusercontent.com/cloudradar-monitoring/rport/master/api-doc.yml#/Login/post_verify_2fa",target:"_blank",rel:"noopener noreferrer"},J=(0,a.Wm)("code",null,"/verify-2fa",-1),V=(0,a.Uk)(" endpoint. It returns an auth JWT token that can be further used for any requests as listed in "),G=(0,a.Uk)("here"),Z=(0,a.Uk)(". For example,"),K=(0,a.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>curl -s http://localhost:3000/api/v1/verify-2fa -H &quot;Content-Type: application/json&quot; -X POST \\\n--data-raw &#39;{\n&quot;username&quot;: &quot;admin&quot;,\n&quot;token&quot;: &quot;05Nfqm&quot;\n}&#39;|jq\n{\n  &quot;data&quot;: {\n    &quot;token&quot;: &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwianRpIjoiMTcwMTc0MjY4MTkxNTQwMDA2NjQifQ.IhOK2leOdCXK5jvAO9aWEcpZ0kanpSkSbRpufha8soc&quot;,\n    &quot;two_fa&quot;: null\n  }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="storing-credentials-managing-users" tabindex="-1"><a class="header-anchor" href="#storing-credentials-managing-users" aria-hidden="true">#</a> Storing credentials, managing users</h2><p>The Rportd can read user credentials from three different sources.</p><ol><li>A &quot;hardcoded&quot; single user with a plaintext password</li><li>A user file with bcrypt encoded passwords</li><li>A database table with bcrypt encoded passwords</li></ol><p>Which one you chose is an either-or decision. A mixed-mode is not supported.</p><p>If you are planning to manage API users through the API or if you want to manage users comfortably using the graphical frontend, you must store users in a database.</p><h3 id="hardcoded-single-user" tabindex="-1"><a class="header-anchor" href="#hardcoded-single-user" aria-hidden="true">#</a> Hardcoded single user</h3><p>To use just a single user enter the following line to the <code>rportd.config</code> in the <code>[api]</code> section.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>auth = &quot;admin:foobaz&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Quite simple. Now you can log in to the API using the username <code>admin</code> and the password <code>foobaz</code>.</p><h3 id="user-file" tabindex="-1"><a class="header-anchor" href="#user-file" aria-hidden="true">#</a> User File</h3><p>If you want to have more than one user, create a json file with the following structure.</p>',12),ee=(0,a.Wm)("div",{class:"language-json ext-json line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-json"},[(0,a.Wm)("code",null,[(0,a.Wm)("span",{class:"token punctuation"},"["),(0,a.Uk)("\n    "),(0,a.Wm)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"username"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token string"},'"Admin"'),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"password"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token string"},'"$2y$10$ezwCZekHE/qxMb4g9n6rU.XIIdCnHnOo.q2wqqA8LyYf3ihonenmu"'),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"groups"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token punctuation"},"["),(0,a.Uk)("\n            "),(0,a.Wm)("span",{class:"token string"},'"Administrators"'),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n            "),(0,a.Wm)("span",{class:"token string"},'"Bunnies"'),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n    "),(0,a.Wm)("span",{class:"token punctuation"},"}"),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n    "),(0,a.Wm)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"username"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token string"},'"Bunny"'),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"password"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token string"},'"$2y$10$ezwCZekHE/qxMb4g9n6rU.XIIdCnHnOo.q2wqqA8LyYf3ihonenmu"'),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"groups"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token punctuation"},"["),(0,a.Uk)("\n            "),(0,a.Wm)("span",{class:"token string"},'"Bunnies"'),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n    "),(0,a.Wm)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n"),(0,a.Wm)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n")])]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"3"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"4"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"5"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"6"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"7"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"8"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"9"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"10"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"11"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"12"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"13"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"14"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"15"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"16"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"17"),(0,a.Wm)("br")])],-1),ne=(0,a.Wm)("div",{class:"language-json ext-json line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-json"},[(0,a.Wm)("code",null,[(0,a.Wm)("span",{class:"token punctuation"},"["),(0,a.Uk)("\n    "),(0,a.Wm)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"username"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token string"},'"Admin"'),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"password"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token string"},'"$2y$10$ezwCZekHE/qxMb4g9n6rU.XIIdCnHnOo.q2wqqA8LyYf3ihonenmu"'),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"groups"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token punctuation"},"["),(0,a.Uk)("\n            "),(0,a.Wm)("span",{class:"token string"},'"Administrators"'),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n            "),(0,a.Wm)("span",{class:"token string"},'"Bunnies"'),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token punctuation"},"]"),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"two_fa_send_to"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token string"},'"my.email@gmail.com"'),(0,a.Uk)("\n    "),(0,a.Wm)("span",{class:"token punctuation"},"}"),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n    "),(0,a.Wm)("span",{class:"token punctuation"},"{"),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"username"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token string"},'"Bunny"'),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"password"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token string"},'"$2y$10$ezwCZekHE/qxMb4g9n6rU.XIIdCnHnOo.q2wqqA8LyYf3ihonenmu"'),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"groups"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token punctuation"},"["),(0,a.Uk)("\n            "),(0,a.Wm)("span",{class:"token string"},'"Bunnies"'),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token punctuation"},"]"),(0,a.Wm)("span",{class:"token punctuation"},","),(0,a.Uk)("\n        "),(0,a.Wm)("span",{class:"token property"},'"two_fa_send_to"'),(0,a.Wm)("span",{class:"token operator"},":"),(0,a.Uk)(),(0,a.Wm)("span",{class:"token string"},'"super.bunny@gmail.com"'),(0,a.Uk)("\n    "),(0,a.Wm)("span",{class:"token punctuation"},"}"),(0,a.Uk)("\n"),(0,a.Wm)("span",{class:"token punctuation"},"]"),(0,a.Uk)("\n")])]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"3"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"4"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"5"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"6"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"7"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"8"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"9"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"10"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"11"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"12"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"13"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"14"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"15"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"16"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"17"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"18"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"19"),(0,a.Wm)("br")])],-1),se=(0,a.uE)('<p>Using <code>/var/lib/rport/api-auth.json</code> or <code>C:\\Program Files\\rport\\api-auth.json</code> is a good choice.</p><p>Enter the following line to your <code>rportd.config</code> in the <code>[api]</code> section.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>auth_file = &quot;/var/lib/rport/api-auth.json&quot;           # Linux\nauth_file = &#39;C:\\Program Files\\rport\\api-auth.json&#39;   # Windows\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Make sure no other auth option is enabled. Reload rportd to activate the changes.</p><p>The file is read only on start or reload <code>kill -SIGUSR1 &lt;pid&gt;</code>. Changes to the file, while rportd is running, have no effect.</p><p>To generate bcrypt hashes use for example the command <code>htpasswd</code> from the Apache Utils.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>htpasswd -nbB password &#39;Super-Secret$Passw0rD&#39;\npassword:$2y$05$Wgzg0fwtiCNYfP69k2uYKuYbmmFtd5RPK7W7mkgemuGkfXB2kgcdW\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Copy the second part after the colon to the <code>api-auth.json</code> file. This is the hash of the password.</p>',8),ae=(0,a.Uk)("htpasswd.exe for Windows can be extracted from this "),te={href:"https://de.apachehaus.com/downloads/httpd-2.4.46-o111g-x86-vc15.zip",target:"_blank",rel:"noopener noreferrer"},re=(0,a.Uk)("ZIP file"),le=(0,a.Uk)(" or this "),oe={href:"https://www.apachelounge.com/download/VS16/binaries/httpd-2.4.46-win64-VS16.zip",target:"_blank",rel:"noopener noreferrer"},ie=(0,a.Uk)("ZIP File"),ue=(0,a.Uk)(" or use this "),me={href:"https://bcrypt-generator.com/",target:"_blank",rel:"noopener noreferrer"},pe=(0,a.Uk)("Online Hash Generator"),ce=(0,a.Uk)("."),de=(0,a.Wm)("h3",{id:"database",tabindex:"-1"},[(0,a.Wm)("a",{class:"header-anchor",href:"#database","aria-hidden":"true"},"#"),(0,a.Uk)(" Database")],-1),be=(0,a.Wm)("p",null,"If you want to integrate rport into and existing user base or if you want to implement some kind of registration, reading credentials from a database might be handy. Rport has no special demands on the database or the table layout.",-1),We=(0,a.Wm)("p",null,"The tables must be created manually.",-1),he=(0,a.Wm)("p",null,"Each time a http basic auth request is received, rport executes these two queries.",-1),ge=(0,a.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-text"},[(0,a.Wm)("code",null,"SELECT username,password FROM {user-table} WHERE username='{username}' LIMIT 1;\nSELECT DISTINCT(group) FROM {group-table} WHERE username='{username}';\n")]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br")])],-1),ke=(0,a.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-text"},[(0,a.Wm)("code",null,"SELECT username,password,two_fa_send_to FROM {user-table} WHERE username='{username}' LIMIT 1;\nSELECT DISTINCT(group) FROM {group-table} WHERE username='{username}';\n")]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br")])],-1),fe=(0,a.Wm)("p",null,"The password must be bcrypt-hashed.",-1),ve=(0,a.Uk)("To use the database authentication you must setup a global database connection in the "),Ue=(0,a.Wm)("code",null,"[database]",-1),qe=(0,a.Uk)(" section of "),xe=(0,a.Wm)("code",null,"rportd.config",-1),we=(0,a.Uk)(" first. Only MySQL/MariaDB and SQLite3 are supported at the moment. The "),Te={href:"https://github.com/cloudradar-monitoring/rport/blob/master/rportd.example.conf",target:"_blank",rel:"noopener noreferrer"},Ee=(0,a.Uk)("example config"),ye=(0,a.Uk)(" contains all explanations on how to set up the database connection."),_e=(0,a.uE)('<p>Having the database set up, enter the following two lines to the <code>[api]</code> section of the <code>rportd.config</code> to specify the table names.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>auth_user_table = &quot;users&quot;\nauth_group_table = &quot;groups&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Reload rportd to apply all changes.</p><h4 id="mysql-example" tabindex="-1"><a class="header-anchor" href="#mysql-example" aria-hidden="true">#</a> MySQL Example</h4><p>Create table. Change column types and lengths to your needs.</p>',5),Ae=(0,a.Wm)("div",{class:"language-mysql ext-mysql line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-mysql"},[(0,a.Wm)("code",null,"CREATE TABLE `users` (\n  `username` varchar(150) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  UNIQUE KEY `username` (`username`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\nCREATE TABLE `groups` (\n  `username` varchar(150) NOT NULL,\n  `group` varchar(150) NOT NULL,\n  UNIQUE KEY `username_group` (`username`,`group`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n")]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"3"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"4"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"5"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"6"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"7"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"8"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"9"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"10"),(0,a.Wm)("br")])],-1),Ne=(0,a.Wm)("div",{class:"language-mysql ext-mysql line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-mysql"},[(0,a.Wm)("code",null,"CREATE TABLE `users` (\n  `username` varchar(150) NOT NULL,\n  `password` varchar(255) NOT NULL,\n  `two_fa_send_to` varchar(150),\n  `token` char(36) default NULL,\n  UNIQUE KEY `username` (`username`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\nCREATE TABLE `groups` (\n  `username` varchar(150) NOT NULL,\n  `group` varchar(150) NOT NULL,\n  UNIQUE KEY `username_group` (`username`,`group`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n")]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"3"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"4"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"5"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"6"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"7"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"8"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"9"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"10"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"11"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"12"),(0,a.Wm)("br")])],-1),Ie=(0,a.uE)('<h4 id="sqlite-example" tabindex="-1"><a class="header-anchor" href="#sqlite-example" aria-hidden="true">#</a> SQLite Example</h4><p>Enter the following line to the <code>rportd.conf</code> file in the <code>[api]</code> and <code>[database]</code> section:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[api]\n  #auth = &quot;admin:foobaz&quot; &lt;-- Must be disabled\n  auth_user_table = &quot;users&quot;\n  auth_group_table = &quot;groups&quot;\n[database]\n  db_type = &quot;sqlite&quot;\n  db_name = &quot;/var/lib/rport/database.sqlite3&quot;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Create the database and set the ownership. Restart rport afterwards.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>touch /var/lib/rport/database.sqlite3\nchown rport:rport /var/lib/rport/database.sqlite3\nsystemctl restart rportd\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Now connect to the database and create the tables. <em>Change column types and lengths to your needs.</em></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sqlite3 /var/lib/rport/database.sqlite3\nSQLite version 3.31.1 2020-01-27 19:55:54\nEnter &quot;.help&quot; for usage hints.\nsqlite&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',7),Le=(0,a.Wm)("div",{class:"language-sqlite ext-sqlite line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-sqlite"},[(0,a.Wm)("code",null,'CREATE TABLE "users" (\n  "username" TEXT(150) NOT NULL,\n  "password" TEXT(255) NOT NULL\n);\nCREATE UNIQUE INDEX "main"."username"\nON "users" (\n  "username" ASC\n);\nCREATE TABLE "groups" (\n  "username" TEXT(150) NOT NULL,\n  "group" TEXT(150) NOT NULL\n);\nCREATE UNIQUE INDEX "main"."username_group"\nON "groups" (\n  "username" ASC,\n  "group" ASC\n);\n')]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"3"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"4"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"5"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"6"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"7"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"8"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"9"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"10"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"11"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"12"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"13"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"14"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"15"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"16"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"17"),(0,a.Wm)("br")])],-1),Ce=(0,a.Wm)("div",{class:"language-sqlite ext-sqlite line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-sqlite"},[(0,a.Wm)("code",null,'CREATE TABLE "users" (\n  "username" TEXT(150) NOT NULL,\n  "password" TEXT(255) NOT NULL,\n  "token" TEXT(36) DEFAULT NULL,\n  "two_fa_send_to" TEXT(150)\n);\nCREATE UNIQUE INDEX "main"."username"\nON "users" (\n  "username" ASC\n);\nCREATE TABLE "groups" (\n  "username" TEXT(150) NOT NULL,\n  "group" TEXT(150) NOT NULL\n);\nCREATE UNIQUE INDEX "main"."username_group"\nON "groups" (\n  "username" ASC,\n  "group" ASC\n);\n')]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"3"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"4"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"5"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"6"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"7"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"8"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"9"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"10"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"11"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"12"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"13"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"14"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"15"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"16"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"17"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"18"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"19"),(0,a.Wm)("br")])],-1),Re=(0,a.uE)('<p>Sqlite does not print any confirmation. To confirm your tables have been created execute:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>sqlite&gt; SELECT name FROM sqlite_master WHERE type=&#39;table&#39;;\nusers\ngroups\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Now insert the first user:</p>',3),Se=(0,a.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-text"},[(0,a.Wm)("code",null,"sqlite> INSERT INTO users VALUES('admin','$2y$05$zfvuP4PvjsNWTqRFLdswEeRzETE2KiZONJQyVn7T3ZV5qcYAlmNWO');\nsqlite> INSERT INTO groups VALUES('admin','Administrators');\n")]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br")])],-1),Oe=(0,a.Wm)("div",{class:"language-text ext-text line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-text"},[(0,a.Wm)("code",null,"sqlite> INSERT INTO users VALUES('admin','$2y$05$zfvuP4PvjsNWTqRFLdswEeRzETE2KiZONJQyVn7T3ZV5qcYAlmNWO','my.email@gmail.com');\nsqlite> INSERT INTO groups VALUES('admin','Administrators');\n")]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br")])],-1),Fe=(0,a.Uk)("This creates a user "),Pe=(0,a.Wm)("code",null,"admin",-1),He=(0,a.Uk)(" with the password "),je=(0,a.Wm)("code",null,"password",-1),Be=(0,a.Uk)(". To use another password, create the appropriate bcrypt hash "),Me={href:"https://bcrypt-generator.com/",target:"_blank",rel:"noopener noreferrer"},Xe=(0,a.Uk)("here"),ze=(0,a.Uk)("."),De=(0,a.uE)('<h4 id="api-usage-examples" tabindex="-1"><a class="header-anchor" href="#api-usage-examples" aria-hidden="true">#</a> API Usage examples</h4><p>To verify the user is able to authenticate execute:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>curl -Ss http://localhost:3000/api/v1/users -u admin:password|jq\n{\n  &quot;data&quot;: [\n    {\n      &quot;username&quot;: &quot;admin&quot;,\n      &quot;groups&quot;: [\n        &quot;Administrators&quot;\n      ]\n    }\n  ]\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Create a new user:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>curl -Ss -X POST http://localhost:3000/api/v1/users \\\n-u admin:password \\\n-H &quot;content-type:application/json&quot; \\\n--data-raw &#39;{\n  &quot;username&quot;: &quot;Willy&quot;,\n  &quot;password&quot;: &quot;pass1234&quot;,\n  &quot;groups&quot;: [\n    &quot;Administrators&quot;\n  ]\n}&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Change the password of an existing user:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>curl -Ss -X PUT https://localhost/api/v1/users/Willy \\\n-u admin:password \\\n-H &quot;content-type:application/json&quot; \\\n--data-raw &#39;{&quot;password&quot;: &quot;4321ssap&quot;}&#39;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',7),$e={render:function(e,n){const s=(0,a.up)("OutboundLink"),$e=(0,a.up)("RouterLink"),Qe=(0,a.up)("CodeGroupItem"),Ye=(0,a.up)("CodeGroup");return(0,a.wg)(),(0,a.j4)(a.HY,null,[t,(0,a.Wm)("p",null,[r,(0,a.Wm)("a",l,[o,i,(0,a.Wm)(s)]),u]),m,(0,a.Wm)("ol",null,[(0,a.Wm)("li",null,[p,(0,a.Wm)($e,{to:"/docs/no15-messaging.html#smtp"},{default:(0,a.w5)((()=>[c])),_:1}),d]),(0,a.Wm)("li",null,[(0,a.Wm)("a",b,[W,(0,a.Wm)(s)]),h,(0,a.Wm)($e,{to:"/docs/no15-messaging.html#pushover"},{default:(0,a.w5)((()=>[g])),_:1}),k]),(0,a.Wm)("li",null,[f,(0,a.Wm)($e,{to:"/docs/no15-messaging.html#script"},{default:(0,a.w5)((()=>[v])),_:1})])]),U,q,(0,a.Wm)("ol",null,[x,(0,a.Wm)("li",null,[(0,a.Wm)("p",null,[w,(0,a.Wm)($e,{to:"/docs/no15-messaging.html#smtp"},{default:(0,a.w5)((()=>[T])),_:1}),E,(0,a.Wm)($e,{to:"/docs/no15-messaging.html#pushover"},{default:(0,a.w5)((()=>[y])),_:1}),_])]),(0,a.Wm)("li",null,[(0,a.Wm)("p",null,[A,(0,a.Wm)($e,{to:"/docs/no02-api-auth.html#hardcoded-single-user"},{default:(0,a.w5)((()=>[N])),_:1}),I])]),(0,a.Wm)("li",null,[(0,a.Wm)("p",null,[L,(0,a.Wm)($e,{to:"/docs/no02-api-auth.html#user-file"},{default:(0,a.w5)((()=>[C])),_:1}),R,(0,a.Wm)($e,{to:"/docs/no02-api-auth.html#database"},{default:(0,a.w5)((()=>[S])),_:1}),O,F,P])]),H]),j,(0,a.Wm)("ol",null,[(0,a.Wm)("li",null,[B,(0,a.Wm)("a",M,[X,(0,a.Wm)(s)]),z])]),D,(0,a.Wm)("ol",$,[(0,a.Wm)("li",null,[Q,(0,a.Wm)("a",Y,[J,(0,a.Wm)(s)]),V,(0,a.Wm)($e,{to:"/docs/no02-api-auth.html#bearer-token-auth"},{default:(0,a.w5)((()=>[G])),_:1}),Z])]),K,(0,a.Wm)(Ye,null,{default:(0,a.w5)((()=>[(0,a.Wm)(Qe,{title:"2FA off"},{default:(0,a.w5)((()=>[ee])),_:1}),(0,a.Wm)(Qe,{title:"2FA on"},{default:(0,a.w5)((()=>[ne])),_:1})])),_:1}),se,(0,a.Wm)("p",null,[ae,(0,a.Wm)("a",te,[re,(0,a.Wm)(s)]),le,(0,a.Wm)("a",oe,[ie,(0,a.Wm)(s)]),ue,(0,a.Wm)("a",me,[pe,(0,a.Wm)(s)]),ce]),de,be,We,he,(0,a.Wm)(Ye,null,{default:(0,a.w5)((()=>[(0,a.Wm)(Qe,{title:"2FA off"},{default:(0,a.w5)((()=>[ge])),_:1}),(0,a.Wm)(Qe,{title:"2FA on"},{default:(0,a.w5)((()=>[ke])),_:1})])),_:1}),fe,(0,a.Wm)("p",null,[ve,Ue,qe,xe,we,(0,a.Wm)("a",Te,[Ee,(0,a.Wm)(s)]),ye]),_e,(0,a.Wm)(Ye,null,{default:(0,a.w5)((()=>[(0,a.Wm)(Qe,{title:"2FA off"},{default:(0,a.w5)((()=>[Ae])),_:1}),(0,a.Wm)(Qe,{title:"2FA on"},{default:(0,a.w5)((()=>[Ne])),_:1})])),_:1}),Ie,(0,a.Wm)(Ye,null,{default:(0,a.w5)((()=>[(0,a.Wm)(Qe,{title:"2FA off"},{default:(0,a.w5)((()=>[Le])),_:1}),(0,a.Wm)(Qe,{title:"2FA on"},{default:(0,a.w5)((()=>[Ce])),_:1})])),_:1}),Re,(0,a.Wm)(Ye,null,{default:(0,a.w5)((()=>[(0,a.Wm)(Qe,{title:"2FA off"},{default:(0,a.w5)((()=>[Se])),_:1}),(0,a.Wm)(Qe,{title:"2FA on"},{default:(0,a.w5)((()=>[Oe])),_:1})])),_:1}),(0,a.Wm)("p",null,[Fe,Pe,He,je,Be,(0,a.Wm)("a",Me,[Xe,(0,a.Wm)(s)]),ze]),De],64)}}}}]);